{"ast":null,"code":"const configApi = {\n  url: 'http://localhost:3000',\n  headers: {\n    'Content-Type': 'application/json',\n    authorization: 'f2aec418-693a-4d30-9fa0-f227bcec820c'\n  }\n};\nconst configAuthApi = {\n  url: \"http://localhost:3000\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n};\nclass Api {\n  constructor(configApi) {\n    this._url = configApi.url;\n    this._headers = configApi.headers;\n  }\n  _checkResponse(item) {\n    return item.then(item => {\n      if (item.ok) {\n        return item.json();\n      }\n      return Promise.reject(`${item.status}`);\n    });\n  }\n  getTasks() {\n    const card = fetch(`${this._url}/cards`, {\n      headers: this._headers\n    });\n    return this._checkResponse(card);\n  }\n  getInfoUser() {\n    const infoUSer = fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    });\n    return this._checkResponse(infoUSer);\n  }\n  saveInfoUser(name, about) {\n    const saveInfoUser = fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    });\n    return this._checkResponse(saveInfoUser);\n  }\n  creatCard(name, link) {\n    const creatCard = fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    });\n    return this._checkResponse(creatCard);\n  }\n  deleteCard(id) {\n    const deleteCard = fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n    return this._checkResponse(deleteCard);\n  }\n  addLike(id) {\n    const addLike = fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    });\n    return this._checkResponse(addLike);\n  }\n  deleteLike(id) {\n    const addLike = fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n    return this._checkResponse(addLike);\n  }\n  updateAvatar(avatar) {\n    const updateAvatar = fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    });\n    return this._checkResponse(updateAvatar);\n  }\n}\nclass AuthApi {\n  constructor(configAuthApi) {\n    this.url = configAuthApi.url;\n    this.headers = configAuthApi.headers;\n  }\n  _checkResponse(item) {\n    return item.then(item => {\n      if (item.ok) {\n        return item.json();\n      }\n      return Promise.reject(`${item.status}`);\n    });\n  }\n  registerUser(email, password) {\n    const registerUser = fetch(`${this.url}/signup`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    return this._checkResponse(registerUser);\n  }\n  // получаем токен пользовтеля\n  tokenUser(email, password) {\n    const tokenUser = fetch(`${this.url}/signin`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    return this._checkResponse(tokenUser);\n  }\n  // проверяем токен пользовтеля\n  getToken(token) {\n    const getToken = fetch(`${this.url}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    return this._checkResponse(getToken);\n  }\n}\nconst dataApi = new Api(configApi);\nconst dataAuthApi = new AuthApi(configAuthApi);\nexport { dataApi, dataAuthApi };","map":{"version":3,"names":["configApi","url","headers","authorization","configAuthApi","Api","constructor","_url","_headers","_checkResponse","item","then","ok","json","Promise","reject","status","getTasks","card","fetch","getInfoUser","infoUSer","saveInfoUser","name","about","method","body","JSON","stringify","creatCard","link","deleteCard","id","addLike","deleteLike","updateAvatar","avatar","AuthApi","registerUser","email","password","tokenUser","getToken","token","dataApi","dataAuthApi"],"sources":["/Users/valeriababere/Desktop/bakend-frontend/two-frontend-bekend/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["const configApi = {\n  url: 'http://localhost:3000',\n  headers: {\n    'Content-Type': 'application/json',\n    authorization: 'f2aec418-693a-4d30-9fa0-f227bcec820c'\n  },\n}\n\nconst configAuthApi = {\n  url: \"http://localhost:3000\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n\n  }\n}\nclass Api {\n  constructor(configApi) {\n    this._url = configApi.url\n    this._headers = configApi.headers\n  }\n\n  _checkResponse(item) {\n    return item.then(item => {\n      if (item.ok) {\n        return item.json()\n      }\n      return Promise.reject(`${item.status}`)\n    })\n  }\n\n  getTasks() {\n    const card = fetch(`${this._url}/cards`, {\n      headers: this._headers,\n    })\n    return this._checkResponse(card)\n  }\n\n  getInfoUser() {\n    const infoUSer = fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n    })\n    return this._checkResponse(infoUSer)\n  }\n\n  saveInfoUser(name, about) {\n    const saveInfoUser = fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name, about\n      })\n    })\n    return this._checkResponse(saveInfoUser)\n  }\n\n  creatCard(name, link) {\n    const creatCard = fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({ name, link })\n    })\n    return this._checkResponse(creatCard)\n  }\n\n  deleteCard(id) {\n    const deleteCard = fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    return this._checkResponse(deleteCard)\n  }\n\n  addLike(id) {\n    const addLike = fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    return this._checkResponse(addLike)\n  }\n\n  deleteLike(id) {\n    const addLike = fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    return this._checkResponse(addLike)\n  }\n\n  updateAvatar(avatar) {\n    const updateAvatar = fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    })\n    return this._checkResponse(updateAvatar)\n  }\n}\n\nclass AuthApi {\n  constructor(configAuthApi) {\n    this.url = configAuthApi.url\n    this.headers = configAuthApi.headers\n  }\n  _checkResponse(item) {\n    return item.then(item => {\n      if (item.ok) {\n        return item.json()\n      }\n      return Promise.reject(`${item.status}`)\n    })\n  }\n\n  registerUser(email, password) {\n    const registerUser = fetch(`${this.url}/signup`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({ email, password })\n    })\n    return this._checkResponse(registerUser)\n  }\n  // получаем токен пользовтеля\n  tokenUser(email, password) {\n    const tokenUser = fetch(`${this.url}/signin`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({ email, password }),\n    })\n    return this._checkResponse(tokenUser)\n  }\n  // проверяем токен пользовтеля\n  getToken(token) {\n    const getToken = fetch(`${this.url}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    return this._checkResponse(getToken)\n  }\n}\n\nconst dataApi = new Api(configApi)\nconst dataAuthApi = new AuthApi(configAuthApi)\n\nexport { dataApi, dataAuthApi }  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}