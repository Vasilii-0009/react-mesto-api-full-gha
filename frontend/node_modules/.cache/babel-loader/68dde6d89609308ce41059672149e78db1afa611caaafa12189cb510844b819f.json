{"ast":null,"code":"//const token = localStorage.getItem('token');\nconst configApi = {\n  url: 'http://localhost:3001',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${token}`\n  }\n};\nconst configAuthApi = {\n  url: \"http://localhost:3001\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n};\nclass Api {\n  constructor(configApi) {\n    this._url = configApi.url;\n    this._headers = configApi.headers;\n  }\n  _checkResponse(item) {\n    return item.then(item => {\n      if (item.ok) {\n        return item.json();\n      }\n      return Promise.reject(`${item.status}`);\n    });\n  }\n  getTasks() {\n    const token = localStorage.getItem('token');\n    const card = fetch(`${this._url}/cards`, {\n      headers: this.headers\n    });\n    return this._checkResponse(card);\n  }\n  getInfoUser() {\n    const token = localStorage.getItem('token');\n    const infoUSer = fetch(`${this._url}/users/me`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n        //  authorization: `Bearer ${token}`,\n      }\n    });\n\n    return this._checkResponse(infoUSer);\n  }\n  saveInfoUser(name, about) {\n    const token = localStorage.getItem('token');\n    const saveInfoUser = fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        name,\n        about\n      })\n    });\n    return this._checkResponse(saveInfoUser);\n  }\n  creatCard(name, link) {\n    const token = localStorage.getItem('token');\n    const creatCard = fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        name,\n        link\n      })\n    });\n    return this._checkResponse(creatCard);\n  }\n  deleteCard(id) {\n    const token = localStorage.getItem('token');\n    const deleteCard = fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    return this._checkResponse(deleteCard);\n  }\n  addLike(id) {\n    const token = localStorage.getItem('token');\n    const addLike = fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    return this._checkResponse(addLike);\n  }\n  deleteLike(id) {\n    const token = localStorage.getItem('token');\n    const addLike = fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    return this._checkResponse(addLike);\n  }\n  updateAvatar(avatar) {\n    const token = localStorage.getItem('token');\n    const updateAvatar = fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        avatar\n      })\n    });\n    return this._checkResponse(updateAvatar);\n  }\n}\nclass AuthApi {\n  constructor(configAuthApi) {\n    this.url = configAuthApi.url;\n    this.headers = configAuthApi.headers;\n  }\n  _checkResponse(item) {\n    return item.then(item => {\n      if (item.ok) {\n        return item.json();\n      }\n      return Promise.reject(`${item.status}`);\n    });\n  }\n  registerUser(email, password) {\n    const token = localStorage.getItem('token');\n    console.log(`${token} register api.js`);\n    const registerUser = fetch(`${this.url}/signup`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    return this._checkResponse(registerUser);\n  }\n  // получаем токен пользовтеля\n  tokenUser(email, password) {\n    const tokenUser = fetch(`${this.url}/signin`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    return this._checkResponse(tokenUser);\n  }\n  // проверяем токен пользовтеля\n  getToken() {\n    const token = localStorage.getItem('token');\n    const getToken = fetch(`${this.url}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    return this._checkResponse(getToken);\n  }\n}\nconst dataApi = new Api(configApi);\nconst dataAuthApi = new AuthApi(configAuthApi);\nexport { dataApi, dataAuthApi };","map":{"version":3,"names":["configApi","url","headers","token","configAuthApi","Api","constructor","_url","_headers","_checkResponse","item","then","ok","json","Promise","reject","status","getTasks","localStorage","getItem","card","fetch","getInfoUser","infoUSer","saveInfoUser","name","about","method","body","JSON","stringify","creatCard","link","deleteCard","id","addLike","deleteLike","updateAvatar","avatar","AuthApi","registerUser","email","password","console","log","tokenUser","getToken","dataApi","dataAuthApi"],"sources":["/Users/valeriababere/Desktop/bakend-frontend/two-frontend-bekend/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["//const token = localStorage.getItem('token');\nconst configApi = {\n  url: 'http://localhost:3001',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${token}`,\n  }\n}\n\nconst configAuthApi = {\n  url: \"http://localhost:3001\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n\n  }\n}\nclass Api {\n  constructor(configApi) {\n    this._url = configApi.url\n    this._headers = configApi.headers\n  }\n\n  _checkResponse(item) {\n    return item.then(item => {\n      if (item.ok) {\n        return item.json()\n      }\n      return Promise.reject(`${item.status}`)\n    })\n  }\n\n  getTasks() {\n    const token = localStorage.getItem('token');\n    const card = fetch(`${this._url}/cards`, {\n      headers: this.headers,\n    })\n    return this._checkResponse(card)\n  }\n\n  getInfoUser() {\n    const token = localStorage.getItem('token');\n    const infoUSer = fetch(`${this._url}/users/me`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n        //  authorization: `Bearer ${token}`,\n      },\n    })\n    return this._checkResponse(infoUSer)\n  }\n\n  saveInfoUser(name, about) {\n    const token = localStorage.getItem('token');\n    const saveInfoUser = fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        name, about\n      })\n    })\n    return this._checkResponse(saveInfoUser)\n  }\n\n  creatCard(name, link) {\n    const token = localStorage.getItem('token');\n    const creatCard = fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      },\n      body: JSON.stringify({ name, link })\n    })\n    return this._checkResponse(creatCard)\n  }\n\n  deleteCard(id) {\n    const token = localStorage.getItem('token');\n    const deleteCard = fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    return this._checkResponse(deleteCard)\n  }\n\n  addLike(id) {\n    const token = localStorage.getItem('token');\n    const addLike = fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    return this._checkResponse(addLike)\n  }\n\n  deleteLike(id) {\n    const token = localStorage.getItem('token');\n    const addLike = fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    return this._checkResponse(addLike)\n  }\n\n  updateAvatar(avatar) {\n    const token = localStorage.getItem('token');\n    const updateAvatar = fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        avatar,\n      })\n    })\n    return this._checkResponse(updateAvatar)\n  }\n}\n\nclass AuthApi {\n  constructor(configAuthApi) {\n    this.url = configAuthApi.url\n    this.headers = configAuthApi.headers\n  }\n  _checkResponse(item) {\n    return item.then(item => {\n      if (item.ok) {\n        return item.json()\n      }\n      return Promise.reject(`${item.status}`)\n    })\n  }\n\n  registerUser(email, password) {\n    const token = localStorage.getItem('token')\n    console.log(`${token} register api.js`)\n    const registerUser = fetch(`${this.url}/signup`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({ email, password })\n    })\n    return this._checkResponse(registerUser)\n  }\n  // получаем токен пользовтеля\n  tokenUser(email, password) {\n    const tokenUser = fetch(`${this.url}/signin`, {\n      method: 'POST',\n      headers: this.headers,\n\n      body: JSON.stringify({ email, password }),\n    })\n    return this._checkResponse(tokenUser)\n  }\n  // проверяем токен пользовтеля\n  getToken() {\n    const token = localStorage.getItem('token');\n    const getToken = fetch(`${this.url}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    return this._checkResponse(getToken)\n  }\n}\n\nconst dataApi = new Api(configApi)\nconst dataAuthApi = new AuthApi(configAuthApi)\n\nexport { dataApi, dataAuthApi }  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}